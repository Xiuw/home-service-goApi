#!/bin/sh
printf "\033[0;30m\033[32mRunning golint for staged go file\033[0m\n"

STAGED_GO_FILES=$(git diff --cached --name-only | grep "\.go$")

if [[ "$STAGED_GO_FILES" = "" ]]; then
  printf "\033[0;30m\033[33mNO STAGED GO FILES !!!!\033[0m\n"
  exit 0
fi

PASS=

for FILE in $STAGED_GO_FILES
do 
 go run golang.org/x/lint/golint "-set_exit_status" $FILE
 if [[ $? != 0 ]]; then
    printf "\t\033[31m $FILE\033[0m \033[0;30m\033[41mFAILURE!\033[0m\n"
    PASS=false
  # errorCount=$(go run golang.org/x/lint/golint $STAGED_GO_FILES | wc -l)
  # if [ "$errorCount" -gt '0' ]; then
  #   printf "\t\033[31mgolint $FILE\033[0m \033[0;30m\033[41mFAIL\033[0m\n"
  #   echo $errCount
  #   echo "Suggestions for: $FILE"
  #   go run golang.org/x/lint/golint $FILE
  else  
    printf "\t\033[32m$FILE\033[0m \033[0;30m\033[42mPASSING\033[0m\n"
    PASS=true
  fi
done

exec < /dev/tty
if ! $PASS; then
  echo "Pausing to let you know about lint suggestions."
  echo
  read -r -p 'Press "enter" to cancel git commit, type "ack" to continue and ignore lint suggestions: '
  echo
  if [ "$REPLY" = "ack" ]; then
    printf "\033[0;30m\033[42m COMMIT SUCCEEDED !!! \033[0m\n"
    exit 0
  else
    printf "\033[0;30m\033[41m COMMIT FAILED !!! \033[0m\n"
    exit 1
  fi
else
  printf "\033[0;30m\033[42m COMMIT SUCCEEDED !!! \033[0m\n"
  exit 0
fi
